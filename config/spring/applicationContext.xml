<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:context="http://www.springframework.org/schema/context" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd">
       
       <!--加载数据源配置文件properties  -->
       <context:property-placeholder location="classpath:c3p0/c3p0-db.properties"/>
       
       <!--配置数据源  -->
       <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
       		<property name="driverClass" value="${jdbc.driverClass}"/>
        	<property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
        	<property name="user" value="${jdbc.username}"/>
        	<property name="password" value="${jdbc.password}"/>
       </bean>
       
       <!--spring容器创建sqlSessionFactory  --> 
      <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
      		<!--加载Mapper的配置文件  -->
      		<property name="configLocation" value="classpath:mybatis/SqlMapConfig.xml"/>
      		<!--加载数据源  -->
      		<property name="dataSource" ref="dataSource"/>
      		<!--批量定义别名指定包名：
      		mybatis自动扫描包中的po类，自动定义别名，别名就是类名（首字母大学或小写都可以，一般小写）  -->
      		<property name="typeAliasesPackage" value="cn.jx.pxc.pojo"/>
      </bean>
        
        <!-- 导入注入的实体类与依赖注入原始dao -->
       <!--  <import resource="classpath:bean/User.xml"/> -->
        
        <!--使用mapper接口代理写dao  -->
        <!-- mapper设置，由spring代为管理 
        	MapperFactoryBean:根据mapper几口生成代理对象
        -->
      <!--   <bean id="userMapper" class=" org.mybatis.spring.mapper.MapperFactoryBean">
        	mapperInterface指定mapper接口 
        	<property name="mapperInterface" value="cn.jx.pxc.ssm.mapper.UserMapper"/>
        	<property name="sqlSessionFactory" ref="sqlSessionFactory"/>
        </bean> --><!--缺点:需要为每个Mapper接口创建，繁琐  -->
        
        <!--mapper批量扫描，从mapper包中扫描出mapper接口，自动创建代理对象并且在spring容器中注册  -->
        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        		<!-- 指定扫描的包名 ,在sqlMapper.xml中就不用在导入xml文件了
        			如果扫描多个包，每个包中间使用半角逗号隔开.
        		-->
        		<property name="basePackage" value="cn.jx.pxc.ssm.mapper"/>
        		<!--不能直接使用sqlSessionFactory，
        		否则就会使先加载mapper,dataSource中properties后加载  
        		-->
        		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        </bean>
        
</beans>